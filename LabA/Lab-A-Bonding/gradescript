#!/bin/sh 

dir=/home/jplank/cs360/labs/Lab-A-Bonding
ge="$dir/Gradescript-Examples"

if [ $# -ne 1 ]; then
  echo 'usage: gradescript problem_number (1-100)' >&2
  exit 1
fi

if [ "$1" -gt 0 -a "$1" -le 100 ]; then
  enum=`echo $1 | awk '{ printf "%03d\n", $1 }'`
else
  echo 'usage: gradescript problem_number (1-100)' >&2
  exit 1
fi
  
program=bonding
  
if [ ! -f $program ]; then
  echo "Problem $enum is incorrect."
  echo ""
  echo "Your program $program does not exist."
  exit 0
fi

rm -f tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt

  ./$program `cat $ge/$enum.txt` > tmp-$enum-test-stdout.txt 2> tmp-$enum-test-stderr.txt
  call="./$program "`cat $ge/$enum.txt`" > tmp-$enum-test-stdout.txt 2> tmp-$enum-test-stderr.txt"

nm=`cat $ge/$enum.txt | awk '{ print $2*3 }'`

out=`wc tmp-$enum-test-stdout.txt | awk '{ print $1 }'`
err=`wc tmp-$enum-test-stderr.txt | awk '{ print $1 }'`

if [ $out != $nm -o $err != 0 ]; then
  echo "Problem $enum is incorrect."
  echo ""
  if [ $out != $nm ]; then
    echo "Your standard output should have $nm lines, but it has $out."
  fi
  if [ $err != 0 ]; then
    echo "Your standard error was not empty."
  fi
  echo ""
  echo "TEST:"
  echo ""
  echo "$call"
  echo ""
  echo "FILES:"
  echo ""
  echo "Your standard output is in tmp-$enum-test-stdout.txt."
  echo "Your standard error  is in tmp-$enum-test-stderr.txt."
  echo ""
  echo "Try putting some verbosity statements into your code to debug it."
  echo "Please remember to delete files when you are finished."
else 
  echo "Problem $enum is correct."
  echo ""
  echo "Test: $call" 
  rm -f tmp-$enum-test-stdout.txt tmp-$enum-test-stderr.txt 
fi
